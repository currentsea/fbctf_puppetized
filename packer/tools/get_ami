#!/usr/bin/env python 
# Written by Joseph Bull, 2016
# Program: get_ami 
# Gets the AMI ID based on given "data" from a packer build job 

# Saves the file as "ami_id.txt" and is intended to be used in a jenkins context. 

# The MIT License (MIT)

# Copyright (c) 2016 currentsea

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import os 
import re
import argparse 

def getArgs():
    parser = argparse.ArgumentParser(description='Parses AMI ID from packer output')
    parser.add_argument("--data", help="The last line of a packer output file.")
    args = parser.parse_args()
    return args

def getAmiId(data):
    regexSearch = re.search("([A-Za-z0-9].+): (.+)", data)
    amiId = ""
    if regexSearch != None:
        try:
            amiId = regexSearch.group(2)
        except:
            raise
    return amiId

if __name__ == "__main__":
    args = getArgs()
    if (args.data):
        print "Parsing data..."
        print args.data
        data = str(args.data)
        data = data.strip()
        amiId = getAmiId(data)
        if amiId == "":
            raise IOError("Unable to extract AMI ID.  Failing Build...")
        with open("ami_id.txt", "w") as theAmiFile:
            theAmiFile.write("AMI_ID=" + amiId)
        print "ami_id.txt successfully created"
    else:
        raise IOError("Improper data sent to getAmi File")
